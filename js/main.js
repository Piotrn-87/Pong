!function(c){var t={};function I(g){if(t[g])return t[g].exports;var n=t[g]={i:g,l:!1,exports:{}};return c[g].call(n.exports,n,n.exports,I),n.l=!0,n.exports}I.m=c,I.c=t,I.d=function(c,t,g){I.o(c,t)||Object.defineProperty(c,t,{enumerable:!0,get:g})},I.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},I.t=function(c,t){if(1&t&&(c=I(c)),8&t)return c;if(4&t&&"object"==typeof c&&c&&c.__esModule)return c;var g=Object.create(null);if(I.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:c}),2&t&&"string"!=typeof c)for(var n in c)I.d(g,n,function(t){return c[t]}.bind(null,n));return g},I.n=function(c){var t=c&&c.__esModule?function(){return c.default}:function(){return c};return I.d(t,"a",t),t},I.o=function(c,t){return Object.prototype.hasOwnProperty.call(c,t)},I.p="",I(I.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/paddle.js\nconst GOLDEN_RATIO = 1.61; //FIBO in px\r\nconst MAX_SPEED = 4; //Maximum speed per seconds in px\r\nconst PADDLE_WIDTH = 100; //Paddle width in px\r\nconst PADDLE_HEIGHT = 20; //Paddle height in px\r\nconst SPEED = 0; //Initial speed per seconds in px\r\nlet hue = 180;\r\nclass Paddle {\r\n  constructor(game) {\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.paddleWidth = PADDLE_WIDTH;\r\n    this.paddleHeight = PADDLE_HEIGHT;\r\n    this.speedX = SPEED;\r\n    this.speedY = SPEED;\r\n    this.maxSpeed = MAX_SPEED;\r\n    this.position = {\r\n      x: game.gameWidth / 2 - this.paddleWidth / 2,\r\n      y: game.gameHeight - this.paddleHeight * GOLDEN_RATIO,\r\n    };\r\n\r\n    document.addEventListener("keydown", (event) => {\r\n      hue += GOLDEN_RATIO;\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          this.moveLeft();\r\n          break;\r\n        case 38:\r\n          this.moveUp();\r\n          break;\r\n        case 39:\r\n          this.moveRight();\r\n          break;\r\n        case 40:\r\n          this.moveDown();\r\n          break;\r\n      }\r\n    });\r\n\r\n    document.addEventListener("keyup", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          this.stop();\r\n          break;\r\n        case 38:\r\n          this.stop();\r\n          break;\r\n        case 39:\r\n          this.stop();\r\n          break;\r\n        case 40:\r\n          this.stop();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  moveLeft() {\r\n    this.speedX = -this.maxSpeed;\r\n  }\r\n  moveRight() {\r\n    this.speedX = this.maxSpeed;\r\n  }\r\n  moveUp() {\r\n    this.speedY = -this.maxSpeed;\r\n  }\r\n  moveDown() {\r\n    this.speedY = this.maxSpeed;\r\n  }\r\n  stop() {\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = `hsl(${hue},100%, 50%)`;\r\n    ctx.fillRect(\r\n      this.position.x,\r\n      this.position.y,\r\n      this.paddleWidth,\r\n      this.paddleHeight\r\n    );\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speedX;\r\n    this.position.y += this.speedY;\r\n    if (this.position.x < 0) {\r\n      this.position.x = 3;\r\n    }\r\n    if (this.position.x + PADDLE_WIDTH > this.gameWidth) {\r\n      this.position.x = this.gameWidth - PADDLE_WIDTH - 3;\r\n    }\r\n    if (this.position.y < 0) {\r\n      this.position.y = 3;\r\n    } else if (\r\n      this.position.y >\r\n      this.gameHeight - this.paddleHeight * GOLDEN_RATIO\r\n    ) {\r\n      this.position.y = this.gameHeight - this.paddleHeight * GOLDEN_RATIO;\r\n    }\r\n  }\r\n}\r\n\r\nwindow.addEventListener("keydown", (ev) => {\r\n  console.log(ev.keyCode);\r\n});\r\n\n// CONCATENATED MODULE: ./src/js/collisionDetection.js\nfunction collisionDetection(ball, gameObject) {\r\n  let bottomOfBall = ball.position.y + ball.size;\r\n  let topOfBall = ball.position.y;\r\n  let leftSideOfBall = ball.position.x;\r\n  let rightSideOfBall = ball.position.x + ball.size;\r\n\r\n  let bottomOfObject = gameObject.position.y + gameObject.height;\r\n  let topOfObject = gameObject.position.y;\r\n  let leftSideOfObject = gameObject.position.x;\r\n  let rightSideOfObject = gameObject.position.x + gameObject.width;\r\n\r\n  if (\r\n    bottomOfBall >= topOfObject &&\r\n    topOfBall <= bottomOfObject &&\r\n    leftSideOfBall >= leftSideOfObject &&\r\n    rightSideOfBall <= rightSideOfObject\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/js/ball.js\n\r\nconst BALL = document.getElementById("ball");\r\nconst SIZE = 20; // Ball size in px\r\nconst ball_SPEED = 4; // Ball speed in px\r\nconst ball_GOLDEN_RATIO = 1.61; // FIBONACCI\r\n\r\nclass ball_Ball {\r\n  constructor(game) {\r\n    this.game = game;\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.image = BALL;\r\n    this.size = SIZE;\r\n    this.speed = { x: ball_SPEED, y: ball_SPEED };\r\n    this.position = {\r\n      x: game.gameWidth / 2 - this.size / 2,\r\n      y: game.gameHeight / 2,\r\n    };\r\n  }\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speed.x;\r\n    this.position.y += this.speed.y;\r\n    if (this.position.x + this.size > this.gameWidth || this.position.x < 0) {\r\n      this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    if (this.position.y + this.size > this.gameHeight || this.position.y < 0) {\r\n      this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    let bottomOfBall = this.position.y + this.size - ball_GOLDEN_RATIO;\r\n    let topOfPaddle = this.game.paddle.position.y;\r\n    let leftSideOfPaddle = this.game.paddle.position.x;\r\n    let rightSideOfPaddle =\r\n      this.game.paddle.position.x + this.game.paddle.paddleWidth;\r\n\r\n    // if (\r\n    //   bottomOfBall >= topOfPaddle &&\r\n    //   this.position.x + this.size >= leftSideOfPaddle &&\r\n    //   this.position.x - this.size <= rightSideOfPaddle\r\n    // )\r\n\r\n    if (collisionDetection(this, this.game.paddle)) {\r\n      this.speed.y = -this.speed.y;\r\n      this.position.y = this.game.paddle.position.y - this.size;\r\n    }\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/js/brick.js\n\r\nconst BRICK = document.getElementById("brick");\r\nconst BRICK_WIDTH = 30;\r\nconst BRICK_HEIGHT = 20;\r\nclass brick_Brick {\r\n  constructor(game, position) {\r\n    this.image = BRICK;\r\n    this.game = game;\r\n    this.width = BRICK_WIDTH;\r\n    this.height = BRICK_HEIGHT;\r\n    this.position = position;\r\n  }\r\n\r\n  update() {\r\n    if (collisionDetection(this.game.ball, this)) {\r\n      this.game.ball.speed.y = -this.game.ball.speed.y;\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/js/levels.js\n\r\n\r\nconst levels_BRICK_HEIGHT = 21;\r\nconst levels_BRICK_WIDTH = 31;\r\n\r\nfunction buildLevel(game, level) {\r\n  let bricks = [];\r\n  level.forEach((elementY, rowAmount) => {\r\n    elementY.forEach((elementX, brickAmount) => {\r\n      if (elementX === 1) {\r\n        bricks.push(\r\n          new brick_Brick(game, {\r\n            x: levels_BRICK_WIDTH * brickAmount,\r\n            y: levels_BRICK_HEIGHT * rowAmount + levels_BRICK_HEIGHT * 2,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  });\r\n\r\n  return bricks;\r\n}\r\nconst level1 = [\r\n  [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n];\r\n\n// CONCATENATED MODULE: ./src/js/game.js\n\r\n\r\n\r\n\r\n\r\nconst game_BRICK_WIDTH = 30; // Bricks width in px\r\nconst game_BRICK_HEIGHT = 20; // Bricks height in px\r\n\r\nclass game_Game {\r\n  constructor(gameWidth, gameHeight) {\r\n    this.gameWidth = gameWidth;\r\n    this.gameHeight = gameHeight;\r\n  }\r\n\r\n  start() {\r\n    let bricks = [];\r\n    this.ball = new ball_Ball(this);\r\n    this.brick = new brick_Brick(this);\r\n    this.paddle = new Paddle(this);\r\n    bricks = buildLevel(this, level1);\r\n    // for (let i = 0; i < 20; i++) {\r\n    //   bricks.push(new Brick(this, { x: i * BRICK_WIDTH, y: BRICK_HEIGHT }));\r\n    // }\r\n\r\n    this.gameObject = [this.ball, this.paddle, ...bricks];\r\n  }\r\n  update(deltaTime) {\r\n    // this.paddle.update();\r\n    // this.ball.update();\r\n    this.gameObject.forEach((element) => element.update(deltaTime));\r\n  }\r\n  draw(ctx) {\r\n    // this.paddle.draw(ctx);\r\n    // this.ball.draw(ctx);\r\n    // this.brick.draw(ctx);\r\n    this.gameObject.forEach((element) => element.draw(ctx));\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/js/main.js\n\r\n\r\nconst CANVAS = "canvas";\r\nconst GAME_WIDTH = 620;\r\nconst GAME_HEIGHT = 400;\r\nconst KEYPASUE = 80;\r\n\r\nlet ctx;\r\nlet main_game;\r\nlet pause = false;\r\nlet progress;\r\nlet start = null;\r\n\r\nlet canvas = document.getElementById(CANVAS);\r\nif (!canvas) {\r\n  console.warn("%c My Friend", "color: magenta", "Zjebales !!!");\r\n}\r\nctx = canvas.getContext("2d");\r\n\r\ndocument.addEventListener("keydown", keyDown);\r\n\r\nfunction keyDown(event) {\r\n  switch (event.keyCode) {\r\n    case KEYPASUE:\r\n      pause = !pause;\r\n  }\r\n}\r\n\r\nmain_game = new game_Game(GAME_WIDTH, GAME_HEIGHT);\r\nmain_game.start();\r\n\r\nfunction step(timeStamp) {\r\n  // if (!start) start = timeStamp;\r\n  // progress = timeStamp - start;\r\n  // start = progress;\r\n  let lastTime = 0;\r\n  let deltaTime = timeStamp - lastTime;\r\n  lastTime = timeStamp;\r\n\r\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n  if (!pause) {\r\n    main_game.update(deltaTime);\r\n  }\r\n  main_game.draw(ctx);\r\n\r\n  requestAnimationFrame(step);\r\n}\r\nrequestAnimationFrame(step);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);